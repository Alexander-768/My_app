from api_key import PICTURE_KEY
import requests
import time
import json
import base64



class FusionBrainAPI:
    def __init__(self, url='https://api-key.fusionbrain.ai/', api_key='81680EFB6B571EBF721F60C4EE2BFA46', secret_key=PICTURE_KEY):
        self.URL = url
        self.AUTH_HEADERS = {
            'X-Key': f'Key {api_key}',
            'X-Secret': f'Secret {secret_key}',
        }

    def get_pipeline(self):
        response = requests.get(self.URL + 'key/api/v1/pipelines', headers=self.AUTH_HEADERS)
        response.raise_for_status()  # üí° –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤—ã—è–≤–∏—Ç—å –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        data = response.json()
        return data[0]['id']
    
    def generate(self, prompt, pipeline, images=1, width=1024, height=1024): # –ï—Å–ª–∏ –Ω–∞–¥–æ –ø–æ–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ, —ç—Ç–æ —Å—é–¥–∞
        params = {
            "type": "GENERATE",
            "numImages": images,
            "width": width,
            "height": height,
            "generateParams": {
                "query": f'{prompt}'
            }
        }

        data = {
            'pipeline_id': (None, pipeline),
            'params': (None, json.dumps(params), 'application/json')
        }
        response = requests.post(self.URL + 'key/api/v1/pipeline/run', headers=self.AUTH_HEADERS, files=data)
        data = response.json()
        return data['uuid']
    

    def check_generation(self, request_id, attempts=10, delay=10):
        while attempts > 0:
            response = requests.get(self.URL + 'key/api/v1/pipeline/status/' + request_id, headers=self.AUTH_HEADERS)
            data = response.json()
            if data['status'] == 'DONE':
                return data['result']['files']

            attempts -= 1
            time.sleep(delay)

def generate_picture(prompt):
    if __name__ == '__main__':
        api = FusionBrainAPI()
        pipeline_id = api.get_pipeline()
        uuid = api.generate(f"–°–µ–≥–º–µ–Ω—Ç: {prompt}. –ù–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫-–ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —Å–µ–≥–º–µ–Ω—Ç–∞. –ù–µ –Ω–∞–¥–æ —Ü–∏—Ñ—Ä, –≥—Ä—Ñ–∏–∫–æ–≤ –∏ –Ω–∞–¥–ø–∏—Å–µ–π.", pipeline_id)
        files = api.check_generation(uuid)
        with open('image.jpg', 'wb') as f:
           f.write(base64.b64decode(files[0]))
        ##print(files[0]) —Ç—É—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è base-64 —Å—Ç—Ä–æ–∫–∞
        ###img_data = base64.b64decode(files[0])
        ####return files[0]



#generate_picture('–õ—é–¥–∏ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ –æ—Ç 25 –¥–æ 56 –ª–µ—Ç —Å —É–º–µ—Ä–µ–Ω–Ω—ã–º –¥–æ—Ö–æ–¥–æ–º (–æ—Ç $26 —Ç—ã—Å. –¥–æ $47 —Ç—ã—Å. –≤ –≥–æ–¥). –°–µ–≥–º–µ–Ω—Ç –≤–∫–ª—é—á–∞–µ—Ç –∫–∞–∫ –º–æ–ª–æ–¥—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –∫–∞—Ä—å–µ—Ä—ã, —Ç–∞–∫ –∏ –ª–∏—Ü —Å—Ä–µ–¥–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Å –Ω–µ–≤—ã—Å–æ–∫–∏–º –∏–ª–∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã–º –∑–∞—Ä–∞–±–æ—Ç–∫–æ–º')
#print(generate_picture('–ú—É–∂—á–∏–Ω–∞ –≤ –æ—á–∫–∞—Ö'))
#print('–í—Å–µ')